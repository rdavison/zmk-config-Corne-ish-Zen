/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/* Layers */
#define DEF_L 0
#define NAV_L 1
#define UPP_L 2
#define SYM_L 3
#define NUM_L 4

/* Behavior Settings */
&sk {
  release-after-ms = <60000>;
};

/ {

    ZMK_MACRO(mo_nav,
        wait-ms = <0>;
        tap-ms = <0>;
        bindings
        = <&macro_tap &kp K_CANCEL>
        , <&macro_press &mo NAV_L>
        , <&macro_pause_for_release>
        , <&macro_release &mo NAV_L>;)

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <UPP_L SYM_L>;
            then-layer = <NUM_L>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
        //  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
&trans        &kp Y         &kp P         &kp O         &kp U         &kp J             &kp K         &kp D         &kp L         &kp C         &kp W         &trans
&trans        &kp I         &kp N         &kp E         &kp A         &kp CMMA          &kp M         &kp H         &kp T         &kp S         &kp R         &trans
&trans        &kp Q         &kp Z         &kp SQT       &kp DOT       &none             &kp B         &kp F         &kp G         &kp V         &kp X         &trans
        //  ╰─────────────┴─────────────╮                                                                                       ╭─────────────┴─────────────╯
                                          &mo SYM_L     &mo UPP_L     &mo_nav           &kp SPACE     &mo UPP_L     &mo SYM_L
        //                              ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
        //  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
&trans        &kp C_BRI_DN  &kp C_PREV    &kp C_PP      &kp C_NEXT    &kp C_BRI_UP      &kp GRAVE     &kp ESC       &kp UARW      &kp TAB       &kp HOME      &trans
&trans        &sk LGUI      &sk LALT      &sk LSHFT     &sk LCTRL     &kp MINUS         &kp C_VOL_UP  &kp LARW      &kp ENTER     &kp RARW      &kp END       &trans
&trans        &kp LG(Z)     &kp LG(X)     &kp LG(C)     &kp LG(V)     &none             &kp C_VOL_DN  &kp BSPC      &kp DARW      &kp DEL       &kp K_MUTE    &trans
        //  ╰─────────────┴─────────────╮                                                                                       ╭─────────────┴─────────────╯
                                          &trans        &trans        &trans            &trans        &trans        &trans
        //                              ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        upper_layer {
            label = "Upp";
            bindings = <
        //  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
&trans        &kp LS(Y)     &kp LS(P)     &kp LS(O)     &kp LS(U)     &kp LS(J)         &kp LS(K)     &kp LS(D)     &kp LS(L)     &kp LS(C)     &kp LS(W)     &trans
&trans        &kp LS(I)     &kp LS(N)     &kp LS(E)     &kp LS(A)     &kp COLON         &kp LS(M)     &kp LS(H)     &kp LS(T)     &kp LS(S)     &kp LS(R)     &trans
&trans        &kp LS(Q)     &kp LS(Z)     &kp DQT       &kp SEMI      &none             &kp LS(B)     &kp LS(F)     &kp LS(G)     &kp LS(V)     &kp LS(X)     &trans
        //  ╰─────────────┴─────────────╮                                                                                       ╭─────────────┴─────────────╯
                                          &trans        &trans        &trans            &kp LS(SPACE) &trans        &trans
        //                              ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
        //  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
&trans        &kp TILDE     &kp LBKT      &kp LBRC      &kp LT        &kp PRCNT         &kp CARET     &kp GT        &kp RBRC      &kp RBKT      &kp PIPE      &trans
&trans        &kp GRAVE     &kp QMARK     &kp ASTRK     &kp MINUS     &kp POUND         &kp BSLH      &kp DLLR      &kp AT        &kp PLUS      &kp EXCL      &trans
&trans        &kp LPAR      &kp RPAR      &kp FLSH      &kp AMPS      &none             &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR    &trans
        //  ╰─────────────┴─────────────╮                                                                                       ╭─────────────┴─────────────╯
                                          &trans        &trans        &kp UNDER         &trans        &trans        &trans
        //                              ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
        //  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
&trans        &kp F1        &kp F2        &kp F3        &kp F4        &kp F5            &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &trans
&trans        &kp N1        &kp N2        &kp N3        &kp N4        &kp N5            &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &trans
&trans        &kp F11       &trans        &kp MINUS     &kp PLUS      &none             &kp DOT       &kp ASTRK     &kp FSLH      &trans        &kp F12       &trans
        //  ╰─────────────┴─────────────╮                                                                                       ╭─────────────┴─────────────╯
                                          &trans        &trans        &kp N0            &kp UNDER     &trans        &trans
        //                              ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };
    };
};
